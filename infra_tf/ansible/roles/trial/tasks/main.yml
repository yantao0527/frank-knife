
- name: "Keep client alive"
  lineinfile: dest='{{ sshdconfig }}' regexp='^#?ClientAliveInterval' line='ClientAliveInterval 60'
- lineinfile: dest='{{ sshdconfig }}' regexp='^#?ClientAliveCountMax' line='ClientAliveCountMax 30'

- name: "Reload sshd service"
  service: name=sshd state=reloaded

- name: Correct centos8.2 yum repository baseurl
  ansible.builtin.replace:
    path: '/etc/yum.repos.d/{{ item }}'
    backup: yes
    regexp: '^(baseurl=.*)\$releasever(.*)$'
    replace: '\g<1>8-stream\2'
  with_items:
    - CentOS-AppStream.repo
    - CentOS-Base.repo
    - CentOS-centosplus.repo
    - CentOS-CR.repo
    - CentOS-Extras.repo
    - CentOS-fasttrack.repo
    - CentOS-PowerTools.repo
  when: infra_type == 'ali_ecs.centos82'

- name: "Install required packages"
  yum:
    name: ['make', 'git', 'tree']
    state: present
  when: infra_type == 'ali_ecs.centos82' or infra_type == 'aws_ec2.redhat84'

- name: "Install required package"
  ansible.builtin.apt:
    pkg:
    - acl
    - make
    - python3-pip
    update_cache: true
    state: present
  when: infra_type == 'aws_ec2.ubuntu_22.04'

- name: "Install pip3 latest"
  pip:
    name: pip
    executable: pip3
    state: latest
  when: infra_type == 'aws_ec2.ubuntu_22.04'

# - name: install ansible
#   pip:
#     name: 
#       - ansible
#       - netaddr

- name: "Create user accounts and add users to groups"
  user:
    name: trial
    groups: "wheel"
  when: infra_type == 'ali_ecs.centos82' or infra_type == 'aws_ec2.redhat84'

- name: "Create user accounts and add users to groups"
  user:
    name: trial
    groups: sudo
    shell: /bin/bash
    state: present
  when: infra_type == 'aws_ec2.ubuntu_22.04'

- name: "Change user password"
  user:
    name: "{{ username }}"
    state: present
    password: "{{ password | password_hash('sha512') }}"

- name: "Add authorized keys"
  authorized_key:
    user: trial
    key: "{{ lookup('file', 'files/authorized_keys') }}"

- name: "Add authorized keys"
  authorized_key:
    user: trial
    key: "{{ lookup('file', 'files/id_rsa.pub') }}"

- name: "Initial user[trial] envirnment"
  block:
  - name: install private key
    copy:
      src: id_rsa
      dest: /home/trial/.ssh/id_rsa
      mode: '0400'
  
  - name: config git user name
    git_config:
      name: user.name
      scope: global
      value: frank
  
  - name: config git user email
    git_config:
      name: user.email
      scope: global
      value: yantao0527@gmail.com
  
  - name: config push.default simple
    git_config:
      name: push.default
      scope: global
      value: simple
  
  - name: check out git repository
    git:
      repo: "{{ setup_git }}"
      dest: "{{ cloned_repo_path }}"
      accept_hostkey: yes
  
  become: true
  become_user: trial
